Octopus Sharding Example
========================

This is a sample rails application using Octopus for sharding. 
This application has the User information in master database, 
and all other data is sharded on the `country` attribute of the `current_user`.

Available shards are: brazil, mexico and canada.

How-to
======

Octopus is simple to use, just follow these steps:

Install Gem
------------

Add the gem to your Gemfile:

```ruby
gem 'ar-octopus', '0.0.12', :require => "octopus"
```

Create Shard Configuration
--------------------------

Create a shards.yml file inside config directory, it should have this structure:

```yaml
development:
  shards:
    canada:
      host: localhost
      adapter: mysql
      database: canada_shard
    brazil:
      host: localhost
      adapter: mysql
      database: brazil_shard
    mexico:
      host: localhost
      adapter: mysql
      database: mexico_shard
```

Shardify your Requests
----------------------

After this, you need to select which shard to use. 
This could be done with around_filter in controller, or by setting the shard manually.

This code in application_controller.rb selects the shard:

```ruby
class ApplicationController < ActionController::Base
  around_filter :select_shard


  def select_shard()
    if user_signed_in?
      using(current_user.country.to_sym) { yield }
    else
      yield     
    end
  end
end
```

If the user isn't logged in, the application will use the master shard. 
Then, at login, it will take the country attribute, pass it to Octopus, 
and all queries will be sent to the selected shard.

If you want to specify manually what shard to use, you can use this syntax:

```ruby
User.using(:brazil).all
```

### Important!

Each ActiveRecord object knows where the "source" shard is.
If you want to move objects between shards, you need to specify what shard to send to.

You can do something like this:

```ruby
# This will save the user in the brazil shard
@user = User.using(:brazil).first
@user.name = "New Name"
@user.save()

# This will move the data to another shard:
new_user = User.new
new_user.attributes = @user.attributes
new_user.save()
```

More info can be found at [Octopus Wiki](http://wiki.github.com/tchandy/octopus/).

Thanks
------

This project is sponsored by the [Ruby Summer of Code](http://www.rubysoc.org),
and my mentors [Mike Perham](http://github.com/mperham) and [Amit Agarwal](http://github.com/amitagarwal).

Copyright
---------

Copyright (c) 2010 Thiago Pradi, released under the MIT license.
